{"version":3,"file":"static/js/87.2b47bbba.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Filter/Filter.module.css","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Phonebook.jsx","components/GetFilteredContacts.js","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from 'react'\nimport { nanoid } from 'nanoid';\nimport css from 'components/ContactForm/ContactForm.module.css'\n\nexport default function ContactForm ({ onSubmit }) {\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const nameId = nanoid();\n    const numberId = nanoid();\n\n    const handleNameChange = (e) => {\n        setName(e.target.value)\n    }\n\n    const handlePhoneChange = (e) => {\n        setNumber(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({name, number});\n        resetForm();\n    }\n\n    const resetForm = () => {\n        setName('');\n        setNumber('')\n    }\n  \n\n    return (\n        <form onSubmit={handleSubmit} className={css.form}>\n            <label htmlFor={nameId} className={css.label}>Name</label>\n            <input\n                id={nameId}\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                value={name}\n                onChange={handleNameChange}\n            />\n            <label htmlFor={numberId} className={css.label}>Number</label>\n            <input\n                id={numberId}\n                type=\"tel\"\n                name=\"phone\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                value={number}\n                onChange={handlePhoneChange}\n            />\n            <button type='submit' className={css.button}>Add contact</button>\n        </form>\n    )\n\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"marker\":\"ContactList_marker__sr7Bk\",\"item\":\"ContactList_item__EZYHO\",\"text\":\"ContactList_text__+NWAW\",\"button\":\"ContactList_button__7kL4l\"};","import React from 'react'\nimport PropTypes from \"prop-types\";\nimport css from \"components/ContactList/ContactList.module.css\"\n\nexport default function ContactList({ items, removeContact }) {\n    const contacts = items.map(({ name, number, id }) => {\n        return (\n            <li key={id} className={css.item}>\n                <span className={css.marker}></span>\n                <p className={css.text}>{`${name}: ${number}`}</p>\n                <button\n                    className={css.button}\n                    type='button'\n                    onClick={() => { removeContact(id) }}\n                    >Delete\n                </button>\n            </li>\n        )\n    })\n    return (\n        <ul className={css.contactList}>{contacts}</ul>\n  )\n}\n\nContactList.propTypes = {\n    removeContact: PropTypes.func.isRequired,\n    items: PropTypes.arrayOf(PropTypes.exact({\n            createdAt: PropTypes.string,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n            id: PropTypes.string.isRequired,\n    })).isRequired\n}\n\n\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { nanoid } from 'nanoid';\nimport css from 'components/Filter/Filter.module.css'\n\nexport default function Filter({ onChange, value }) {\n  const filterId = nanoid();\n  \n  return (\n    <div className={css.filter}>\n        <label\n            className={css.label}\n            htmlFor={filterId}\n            >Find contacts by name\n        </label>\n        <input\n            id={filterId}\n            type=\"text\"\n            name=\"filter\"\n            value={value}\n            onChange={onChange}\n        />\n    </div>\n  )\n}\n\nFilter.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired,\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Phonebook_box__rhGkc\",\"contactsWrapper\":\"Phonebook_contactsWrapper__2nNCG\",\"contactForm\":\"Phonebook_contactForm__CjZt9\",\"title\":\"Phonebook_title__ipARL\"};","\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { addContact, removeContact } from 'redux/contacts/contacts-operations';\nimport selectors from 'redux/selectors';\nimport { fetchContacts } from \"redux/contacts/contacts-operations\";\nimport ContactForm from \"components/ContactForm/ContactForm\";\nimport { GetFilteredContacts } from 'components/GetFilteredContacts';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport ContactList from \"components/ContactList/ContactList\";\nimport Filter from \"components/Filter/Filter\";\nimport css from 'components/Phonebook/Phonebook.module.css'\n\nexport default function Phonebook() {\n    const contacts = GetFilteredContacts();\n\n    const filter = useSelector(selectors.getFilterFromState);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch])\n\n    const onAddContact = ({ name, number }) => {\n        dispatch(addContact({ name, number }));\n        dispatch(fetchContacts())\n    }\n    \n    const onRemoveContact = (id) => {\n        const action = removeContact(id);\n        dispatch(action);\n    }\n\n    const handleFilterChange = (e) => {\n        const { value } = e.target;\n        dispatch(setFilter(value));\n    }\n\n   return (\n        <div className={css.box}>\n            <div className={css.contactForm}>\n                <h1 className={css.title}>Add Contacts</h1>\n                <ContactForm onSubmit={onAddContact} />\n            </div>\n           \n            <div className={css.contactsWrapper}>\n                <h2 className={css.title}>Contacts</h2>\n                <Filter onChange={handleFilterChange} value={filter} />\n                \n                {contacts.length>0 && (<ContactList items={contacts} removeContact={onRemoveContact} />)}\n            </div>\n        </div>\n    )\n}","import { useSelector } from \"react-redux\";\nimport selectors from 'redux/selectors';\n\n\nexport function GetFilteredContacts() {\n    \n    const contacts = useSelector(selectors.getContacts);\n    const filter = useSelector(selectors.getFilterFromState);\n\n    if (!filter) {\n        return contacts;\n        \n    }\n    const normalizedFilter = filter.toLocaleLowerCase();\n    \n    const filteredContacts = contacts.filter(({ name }) => {\n        const normalizedName = name.toLocaleLowerCase();\n        const result = normalizedName.includes(normalizedFilter);\n        return result;\n    });\n    return filteredContacts;\n}","// extracted by mini-css-extract-plugin\nexport default {\"contact__container\":\"ContactsPage_contact__container__EB1Gn\",\"title\":\"ContactsPage_title__P3MkR\"};","import Phonebook from \"components/Phonebook/Phonebook\";\nimport css from 'pages/ContactsPage/ContactsPage.module.css'\n\nexport default function ContactsPage () {\n    return (\n        <>   \n            <div className={css.contact__container}>\n                <h1 className={css.title}>My phonebook</h1>\n                <Phonebook />\n            </div>\n        </>\n    )\n}"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","nameId","nanoid","numberId","resetForm","e","preventDefault","className","css","htmlFor","id","type","pattern","title","required","value","onChange","target","ContactList","items","removeContact","contacts","map","onClick","Filter","filterId","Phonebook","useSelector","selectors","filter","normalizedFilter","toLocaleLowerCase","includes","GetFilteredContacts","dispatch","useDispatch","useEffect","fetchContacts","addContact","setFilter","length","action","ContactsPage"],"sourceRoot":""}